<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int-wskt="http://www.springframework.org/schema/integration/websocket"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/websocket http://www.springframework.org/schema/integration/websocket/spring-integration-websocket.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		
	<bean id="subscriptionRegistry" class="org.springframework.integration.websocket.stomp.StandardSubscriptionRegistry"/>

	<bean id="inboundStompTransformer" class="org.springframework.integration.websocket.stomp.inbound.StompWebSocketMessageInboundTransformer"/>
	<bean id="outboundStompTransformer" class="org.springframework.integration.websocket.stomp.outbound.StompWebSocketMessageOutboundTransformer">
		<constructor-arg ref="subscriptionRegistry"/>
	</bean>

	<int:publish-subscribe-channel id="inbound">
		<int:interceptors>
			<bean class="org.springframework.integration.websocket.stomp.inbound.InboundStompChannelInterceptor">
				<constructor-arg ref="clientOutputChannel"/>
				<constructor-arg ref="subscriptionRegistry"/>
			</bean>
		</int:interceptors>
	</int:publish-subscribe-channel>

	<int-wskt:message-driven-channel-adapter channel="inbound" transformer="inboundStompTransformer" path="/si-stomp/echo/**" sockjs="true"/>

	<int:channel id="clientOutputChannel" />
	<int-wskt:outbound-channel-adapter channel="clientOutputChannel" transformer="outboundStompTransformer" />

	<int:channel id="messageBrokerChannel" />

	<bean class="org.springframework.integration.endpoint.EventDrivenConsumer">
		<constructor-arg ref="inbound"/>
		<constructor-arg ref="annotationHandler"/>
	</bean>

	<bean class="org.springframework.integration.endpoint.EventDrivenConsumer">
		<constructor-arg ref="messageBrokerChannel"/>
		<constructor-arg ref="relayHandler"/>
	</bean>

	<bean class="org.springframework.integration.endpoint.EventDrivenConsumer">
		<constructor-arg ref="inbound"/>
		<constructor-arg ref="relayHandler"/>
	</bean>

	<bean id="annotationHandler" class="org.springframework.web.messaging.service.method.AnnotationWebMessageHandler">
		<constructor-arg ref="clientOutputChannel"/>
		<constructor-arg ref="messageBrokerChannel"/>
	</bean>
	
	<bean id="relayHandler" class="org.springframework.web.messaging.stomp.support.StompRelayWebMessageHandler">
		<constructor-arg ref="clientOutputChannel"/>
		<property name="allowedDestinations">
			<util:list>
				<value>/exchange/**</value>
				<value>/queue/*</value>
				<value>/amq/queue/*</value>
				<value>/topic/*</value>
			</util:list>
		</property>
	</bean>

</beans>